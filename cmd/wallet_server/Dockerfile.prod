# Start from the base Golang image
FROM golang:1.18.0-alpine AS builder

# Install git.
# GCC is also necessary for cgo.
RUN apk update && apk add --no-cache git gcc musl-dev

# Set the working directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the entire project into the container
COPY . .

# Set the working directory to "wallet_server"
WORKDIR /app/cmd/wallet_server

# Build the Go app
RUN go build -o main .

# Start a new stage from scratch
FROM alpine:latest AS runner
WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/cmd/wallet_server/main .

# Set the command to run when starting the container
CMD ["/app/main"]
